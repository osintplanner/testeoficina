<!DOCTYPE html>
<html>
<head>
    <title>Depositar em Contrato Inteligente</title>
    <script src="https://cdn.jsdelivr.net/npm/web3@1.3.0/dist/web3.min.js"></script>
</head>
<body>

<h1>Depositar em Contrato Inteligente</h1>

<button id="depositButton">Depositar 0.05 ETH</button>

<script>
    // Verifica se o Web3 foi injetado pelo MetaMask, caso contrário, exibe uma mensagem para o usuário instalar o MetaMask
    if (typeof window.ethereum !== 'undefined') {
        console.log('MetaMask está instalado!');
    } else {
        alert('Por favor, instale o MetaMask para usar este site.');
    }

    // Inicializa o provedor Web3
    const web3 = new Web3(window.ethereum);

    // Endereço do contrato inteligente
    const contractAddress = 'ENDEREÇO_DO_SEU_CONTRATO';
    // ABI do contrato inteligente
    const contractABI = [/* ABI do seu contrato vai aqui */];

    // Cria uma instância do contrato
    const contract = new web3.eth.Contract(contractABI, contractAddress);

    // Função para chamar a função deposit do contrato
    async function deposit() {
        // Solicita ao usuário para conectar a carteira MetaMask
        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
        const fromAddress = accounts[0]; // primeira conta no MetaMask

        // Valor a ser enviado para a função deposit (0.05 ETH)
        const value = web3.utils.toWei('0.05', 'ether');

        // Chama a função deposit do contrato inteligente
        contract.methods.deposit().send({ from: fromAddress, value: value })
        .on('transactionHash', function(hash){
            console.log('Transaction Hash:', hash);
        })
        .on('receipt', function(receipt){
            console.log('Receipt:', receipt);
        })
        .on('error', function(error, receipt) {
            console.error('Error:', error);
        });
    }

    // Adiciona um ouvinte de evento ao botão
    document.getElementById('depositButton').addEventListener('click', deposit);
</script>

</body>
</html>
